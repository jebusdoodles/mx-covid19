{"version":3,"sources":["assets/image/image.png","assets/maps/mx-map.svg","components/AppHeader.js","components/MapSelector.js","components/StateMapContainer.js","components/StateListContainer.js","components/CardSelector.js","components/StateDataContainer.js","components/GeneralGraph.js","components/CentralContainer.js","components/Footer.js","components/LastUpdate.js","components/SEO/SEO.js","containers/HomeContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppHeader","Navbar","bg","variant","Brand","href","Collapse","Nav","className","style","width","data","confdiff","length","confirmados","sosdiff","sospechosos","handleDatos","dataset","Link","mx_svg","require","MapSelector","Figure","Image","src","Caption","StateMapContainer","mapa","titulo","StateListContainer","Table","striped","datosDiarios","slice","sort","a","filter","c","map","nombre","handleList","CardSelector","tipo","cifra","Card","Body","Title","Text","StateDataContainer","conf","sus","des","decesos","Row","Col","handleData","GeneralGraph","height","dbnacional","strokeDasharray","dataKey","type","stroke","CentralContainer","Container","xs","md","Component","Footer","LastUpdate","Toast","Header","SEO","name","content","rel","property","ogImg","HomeContainer","App","exact","path","process","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c94630f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image.ee9432ce.png\";","module.exports = __webpack_public_path__ + \"static/media/mx-map.62e81a81.svg\";","import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport dataset from '../database/dbnacional';\n\nconst AppHeader = () =>{\n    const handleDatos = data =>{\n        let confdiff = data[data.length - 1].confirmados - data[data.length - 2].confirmados;\n        let sosdiff = data[data.length - 1].sospechosos - data[data.length - 2].sospechosos;\n        return(\n            <div className='datosHeader'>\n                <p>confirmados: <span className='color-conf'>+ {confdiff}</span></p>\n                <p>sospechosos: <span className='color-sosdiff'>+ {sosdiff}</span></p>\n            </div>\n        )\n    }\n    return (\n        <div>\n            <Navbar bg=\"gray\" variant=\"light\">\n                <Navbar.Brand href=\"/\">MX COVID-19</Navbar.Brand>\n                <Navbar.Collapse>\n                    <Nav className=\"justify-content-end\" style={{ width: \"100%\" }}>\n                        {\n                            handleDatos(dataset)\n                        }\n                        <Nav.Link href=\"/prevencion\">Prevención</Nav.Link>\n                        <Nav.Link href=\"/oficial\">Fuentes oficiales</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        </div>\n    );\n}\n\nexport default AppHeader;\n","import React from 'react';\nimport { Figure } from 'react-bootstrap';\nconst mx_svg = require('./../assets/maps/mx-map.svg');\n\nconst MapSelector = () =>{\n    return (\n        <div>\n            <Figure>\n                <Figure.Image\n                    src={mx_svg}\n                    className='style_mapsvg'\n                />\n                <Figure.Caption className='style_mapsvg_caption'>\n                    Mapa Casos Confimados México.\n                </Figure.Caption>\n            </Figure>\n        </div>\n    );\n}\n\nexport default MapSelector;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MapSelector from './MapSelector';\n\nconst StateMapContainer = ({ mapa, titulo }) => {\n    return (\n        <div>\n            <div className='title-map-state'>{titulo}</div>\n            <div className='svg-map-state'>\n                <MapSelector mapa={mapa} />\n            </div>\n        </div>\n    );\n}\n\nStateMapContainer.propTypes = {\n    titulo: PropTypes.string.isRequired,\n    mapa: PropTypes.string.isRequired,\n};\n\nexport default StateMapContainer;","import React from 'react';\nimport { Table } from 'react-bootstrap';\nimport dataset from '../database/dbestados';\n\nconst StateListContainer = () =>{\n    const handleList = () =>{\n        let datosDiarios = dataset.slice(dataset.length - 32, dataset.length);\n        //Ordenar lista de mayor a menor\n        datosDiarios = datosDiarios.sort(({confirmados:a}, {confirmados:b}) => b-a);\n        // Imprimir los datos de una tabla\n        return(\n            datosDiarios.filter(c => c.confirmados > 0).map( c => \n                <tr>\n                    <td>{c.nombre}</td>\n                    <td className='tabla-conf'>{c.confirmados}</td>\n                </tr>             \n            )\n        )\n    }\n    return (\n        <div className='TablaConfirmados'>\n            <Table striped>\n                <thead>\n                    <tr>\n                        <th className='tabla-header'>Estado</th>\n                        <th className='tabla-header'>Confirmados</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        handleList(dataset)\n                    }\n                </tbody>\n            </Table>\n        </div>\n    )\n}\n\nexport default StateListContainer; \n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from 'react-bootstrap';\n\nconst CardSelector = ({tipo, titulo, cifra}) => {\n    return (\n        <div>\n            <Card className={tipo}>\n                <Card.Body>\n                    <Card.Title className=\"card-titulo\">{titulo}</Card.Title>\n                    <Card.Text className=\"card-numero\">{cifra}</Card.Text>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n}\n\nCardSelector.propTypes = {\n    tipo: PropTypes.string.isRequired,\n    titulo: PropTypes.string.isRequired,\n    cifra: PropTypes.number.isRequired,\n};\n\nexport default CardSelector;","import React from 'react';\nimport CardSelector from './CardSelector';\nimport { Row, Col } from 'react-bootstrap';\nimport dataset from '../database/dbnacional'; \n\nconst StateDataContainer = () =>{\n    const handleData = data =>{\n        let conf = data[data.length - 1].confirmados;\n        let sus = data[data.length - 1].sospechosos;\n        let des = data[data.length - 1].decesos;\n        return(\n            <Row>\n                <Col>\n                    <CardSelector tipo='confirm' titulo='Confirmados' cifra={conf} />\n                </Col>\n                <Col>\n                    <CardSelector tipo='suspect' titulo='Sospechosos' cifra={sus} />\n                </Col>\n                <Col>\n                    <CardSelector tipo='mortality' titulo='Decesos' cifra={des} />\n                </Col>\n            </Row>\n        ) \n    }\n    return (\n        <div>\n            {\n                handleData(dataset)\n            }\n        </div>\n    );\n};\n\nexport default StateDataContainer;\n","import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport dbnacional from '../database/dbnacional'; \n\nconst GeneralGraph = () =>{\n    //graficas de rechart\n    return (\n        <div className=\"graphContainer\">\n            <LineChart\n                width={500}\n                height={300}\n                data={dbnacional}\n            >\n                <CartesianGrid strokeDasharray=\"5 5\" />\n                <XAxis dataKey=\"fecha-format\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"confirmados\" stroke=\"#cc0000\" />\n                <Line type=\"monotone\" dataKey=\"sospechosos\" stroke=\"#4C994C\" />\n                <Line type=\"monotone\" dataKey=\"decesos\" stroke=\"#333\" />\n            </LineChart>\n        </div>\n    );\n};\n\nexport default GeneralGraph;\n","import React, { Component } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap';\nimport StateMapContainer from './StateMapContainer';\nimport StateListContainer from './StateListContainer'; \nimport StateDataContainer from './StateDataContainer';\nimport GeneralGraph from './GeneralGraph';\n\nexport default class CentralContainer extends Component {\n    render() {\n        return (\n            <div>\n                <Container className=\"contenedor-principal\">\n                    <Row className=\"justify-content-md-center\">\n                        <StateDataContainer />\n                    </Row>\n                    <Row>\n                        <GeneralGraph />\n                    </Row>\n                    <Row>\n                        <Col xs={12} md={8}>\n                            <StateMapContainer mapa='mx' titulo='México' />\n                        </Col>\n                        <Col xs={6} md={4}>\n                            <StateListContainer />\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { FaHeart } from \"react-icons/fa\";\n\nconst Footer = () =>{\n    return (\n        <div className='footer-container'>\n            <p className='footer-text'>Hecho con <FaHeart /> por <a href='https://twitter.com/JebusDoodles'>Jesús Cortés</a>. Quédense en casa.</p>\n        </div>\n    );\n};\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { Toast } from 'react-bootstrap';\nimport { FaRegClock } from 'react-icons/fa';\n\nclass LastUpdate extends Component {\n    render() {\n        return (\n            <div>\n                <Toast className=\"toast-style\">\n                    <Toast.Header>\n                        <strong className=\"mr-auto\">\n                            <FaRegClock />  Última actualización</strong>\n                    </Toast.Header>\n                    <Toast.Body>\n                        19 de Marzo de 2020\n                    </Toast.Body>\n                </Toast>\n            </div>\n        );\n    }\n}\n\nexport default LastUpdate;","import React from 'react'; \nimport Helmet from 'react-helmet'; \nimport ogImg from '../../assets/image/image.png'\n\nconst SEO = () => (\n    <>\n        <Helmet>\n            <title>Tabla seguimiento - MX Covid-19</title>\n            <meta name=\"description\" content=\"Tabla de seguimiento de los casos de COVID-19 (Coronavirus) en México\" />\n            <link rel=\"canonical\" href=\"https://mx-covid19.github.io\" />\n                { /* Tags de OpenGraph */ }\n                <meta property=\"og:url\" content=\"https://mx-covid19.github.io\" />\n                <meta property=\"og:title\" content=\"MX Covid-19 - Tabla seguimiento\" />\n                <meta property=\"og:description\" content=\"Tabla de seguimiento de los casos de COVID-19 (Coronavirus) en México\" />\n                <meta property=\"og:image\" content={ogImg} />\n                { /* Tags de Twitter Card */ }\n                <meta name=\"twitter:card\" content=\"summary_large_image\" />\n                <meta name=\"twitter:title\" content=\"MX Covid-19 - Tabla seguimiento\" />\n                <meta name=\"twitter:description\" content=\"Tabla de seguimiento de los casos de COVID-19 (Coronavirus) en México\" />\n                <meta name=\"twitter:image\" content={ogImg} />\n        </Helmet>\n    </>\n)\n\nexport default SEO; ","import React, { Component } from 'react'\nimport AppHeader from './../components/AppHeader';\nimport CentralContainer from './../components/CentralContainer';\nimport Footer from './../components/Footer';\nimport LastUpdate from './../components/LastUpdate'; \nimport SEO from './../components/SEO/SEO' \n\nexport default class HomeContainer extends Component {\n    render() {\n        return (\n            <div>\n                <SEO />\n                <LastUpdate />\n                <AppHeader></AppHeader>\n                <CentralContainer />\n                <Footer />\n            </div>\n        )\n    }\n}\n","import React from 'react';\n//react router\nimport { BrowserRouter as Router, Route } from 'react-router-dom'; \nimport HomeContainer from './containers/HomeContainer'; \nimport SEO from './components/SEO/SEO'\nimport './App.sass';\n\nfunction App() {\n  return (\n    <Router>\n    <SEO />\n      <div>\n        <Route exact path={process.env.PUBLIC_URL + '/'} component={HomeContainer}></Route>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// estilos de react bootstrap \nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}