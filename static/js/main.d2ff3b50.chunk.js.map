{"version":3,"sources":["assets/image/image.png","assets/maps/mexican.topojson","components/AppHeader.js","components/MapSelector.js","components/StateMapContainer.js","components/StateListContainer.js","components/CardSelector.js","components/StateDataContainer.js","components/GeneralGraph.js","components/MinimalGraph.js","components/CentralContainer.js","components/Footer.js","components/LastUpdate.js","components/SEO/SEO.js","containers/HomeContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppHeader","Navbar","bg","variant","Brand","href","MapSelector","datosDiarios","dataset","slice","length","colorScale","scaleQuantile","domain","map","d","confirmados","range","project","geoConicConformal","rotate","center","parallels","scale","translate","width","height","projection","geography","mapData","geographies","geo","props","cur","find","s","iso","properties","gmi_admin","OverlayTrigger","placement","key","rsmKey","overlay","Tooltip","id","nombre","className","fill","stroke","Component","StateMapContainer","mapa","titulo","StateListContainer","Table","striped","datosPasados","datosListado","i","push","diferencia","datosLista","sort","a","filter","c","handleList","CardSelector","tipo","cifra","subcifra","Card","Body","Title","Text","end","delay","StateDataContainer","data","conf","confdiff","sus","sospechosos","sosdiff","des","decesos","desdiff","Row","Col","handleData","GeneralGraph","dbnacional","dataKey","strokeDasharray","type","x","label","MinimalGraph","act","ant","value","diffList","dia","fechaformat","suma","reverse","diffDays","margin","top","right","left","bottom","position","CentralContainer","Container","xs","md","Footer","LastUpdate","date_update","Alert","SEO","name","content","rel","property","ogImg","HomeContainer","App","exact","path","process","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d2ff3b50.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image.ee9432ce.png\";","module.exports = __webpack_public_path__ + \"static/media/mexican.e5173ac9.topojson\";","import React from 'react';\nimport { Navbar } from 'react-bootstrap';\n\nconst AppHeader = () =>{\n    return (\n        <div>\n            <Navbar bg=\"gray\" variant=\"light\">\n                <Navbar.Brand href=\"/\">MX COVID-19</Navbar.Brand>\n            </Navbar>\n        </div>\n    );\n}\n\nexport default AppHeader;\n","import React, { Component } from 'react';\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\nimport { geoConicConformal } from 'd3-geo';\nimport { scaleQuantile } from 'd3-scale'; \nimport { Tooltip, OverlayTrigger } from 'react-bootstrap'; \nimport mapData from './../assets/maps/mexican.topojson'; \nimport dataset from '../database/dbestados';\n\nclass MapSelector extends Component {\n    render() {\n        let width = 750; \n        let height = 400; \n        let datosDiarios = dataset.slice(dataset.length - 32, dataset.length);\n\n        const colorScale = scaleQuantile()\n            .domain(datosDiarios.map(d => d.confirmados))\n            .range([\n                \"#fef1d2\",\n                \"#fedfa9\",\n                \"#f3c379\",\n                \"#e19254\",\n                \"#c35646\"\n              ]);\n\n        let project = geoConicConformal()\n            .rotate([102, 0])\n            .center([0, 24])\n            .parallels([17.5, 29.5])\n            .scale(1200)\n            .translate([width / 2, height / 2]);\n        \n        function renderTooltip(props) {\n            return (\n                <Tooltip id=\"button-tooltip\">\n                    {props.nombre} <br/> <span className='tooltip-conf'>({props.confirmados})</span>\n                </Tooltip>\n            );\n        }\n\n        return (\n            <>\n                <ComposableMap projection={project}>\n                        <Geographies geography={mapData}>\n                            {({geographies}) => \n                                geographies.map(geo => {\n                                    const cur = datosDiarios.find(s => s.iso === geo.properties.gmi_admin);\n                                    return (\n                                        <OverlayTrigger\n                                            placement=\"right\"\n                                            key={geo.rsmKey}\n                                            overlay={renderTooltip(cur)}\n                                        >\n                                            <Geography \n                                                key={geo.rsmKey} \n                                                geography={geo}\n                                                fill={cur ? colorScale(cur.confirmados) : \"#a3a3a3\"}\n                                                stroke=\"#17789b\"\n                                            />\n                                        </OverlayTrigger>\n                                    );\n                                })\n                            }\n                        </Geographies>\n                </ComposableMap>\n            </>\n        );\n    }\n}\n\nexport default MapSelector;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MapSelector from './MapSelector';\n\nconst StateMapContainer = ({ mapa, titulo }) => {\n    return (\n        <>\n            <div className='title-map-state'>{titulo}</div>\n            <div className='svg-map-state'>\n                <MapSelector mapa={mapa} />\n            </div>\n        </>\n    );\n}\n\nStateMapContainer.propTypes = {\n    titulo: PropTypes.string.isRequired,\n    mapa: PropTypes.string.isRequired,\n};\n\nexport default StateMapContainer;","import React from 'react';\nimport { Table } from 'react-bootstrap';\nimport dataset from '../database/dbestados';\n\nconst StateListContainer = () =>{\n    const handleList = () =>{\n        let datosDiarios = dataset.slice(dataset.length - 32, dataset.length);\n        let datosPasados = dataset.slice(dataset.length - 64, dataset.length - 32);\n\n        // funcion para crear un nuevo arraylist con coparación de datos anteriores\n        let datosLista = () =>{\n            let datosListado = []; \n            for (var i = 0; i < datosDiarios.length; i++){\n                datosListado.push({\n                    nombre: datosDiarios[i].nombre,\n                    confirmados: datosDiarios[i].confirmados,\n                    diferencia: datosDiarios[i].confirmados - datosPasados[i].confirmados\n                }); \n            }\n            return(datosListado); \n        }\n\n        datosDiarios = datosLista(); \n\n        //Ordenar lista de mayor a menor\n        datosDiarios = datosDiarios.sort(({confirmados:a}, {confirmados:b}) => b-a);\n        return(\n            datosDiarios.filter(c => c.confirmados > 0).map( c => \n                <tr key={c.iso}>\n                    <td>{c.nombre}</td>\n                    <td className='tabla-conf'>{c.confirmados} {c.diferencia > 0 ? <span className='diff-lista'>(+{c.diferencia})</span> : \" \"}</td>\n                </tr>             \n            )\n        )\n    }\n    return (\n        <div className='TablaConfirmados'>\n            <Table striped>\n                <thead>\n                    <tr>\n                        <th className='tabla-header'>Estado</th>\n                        <th className='tabla-header'>Confirmados</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        handleList(dataset)\n                    }\n                </tbody>\n            </Table>\n        </div>\n    )\n}\n\nexport default StateListContainer; \n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from 'react-bootstrap';\nimport CountUp from 'react-countup'; \n\nconst CardSelector = ({tipo, titulo, cifra, subcifra}) => {\n    return (\n        <>\n            <Card className={tipo}>\n                <Card.Body>\n                    <Card.Title className=\"card-titulo\">{titulo}</Card.Title>\n                    <Card.Text className=\"card-numero\">\n                        <CountUp end={cifra} /> <br/>\n                        <span className=\"card-subnumero\">(+<CountUp delay={1.5} end={subcifra} />)</span>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        </>\n    );\n}\n\nCardSelector.propTypes = {\n    tipo: PropTypes.string.isRequired,\n    titulo: PropTypes.string.isRequired,\n    cifra: PropTypes.number.isRequired,\n    subcifra: PropTypes.number.isRequired\n};\n\nexport default CardSelector;","import React from 'react';\nimport CardSelector from './CardSelector';\nimport { Row, Col } from 'react-bootstrap';\nimport dataset from '../database/dbnacional'; \n\nconst StateDataContainer = () =>{\n    const handleData = data =>{\n\n        let conf = data[data.length - 1].confirmados;\n        let confdiff = data[data.length - 1].confirmados - data[data.length - 2].confirmados;\n        let sus = data[data.length - 1].sospechosos;\n        let sosdiff = data[data.length - 1].sospechosos - data[data.length - 2].sospechosos;\n        let des = data[data.length - 1].decesos;\n        let desdiff = data[data.length - 1].decesos - data[data.length - 2].decesos;\n        \n        return(\n            <Row>\n                <Col>\n                    <CardSelector tipo='confirm' titulo='Confirmados' cifra={conf} subcifra={confdiff} />\n                </Col>\n                <Col>\n                    <CardSelector tipo='suspect' titulo='Sospechosos' cifra={sus} subcifra={sosdiff} />\n                </Col>\n                <Col>\n                    <CardSelector tipo='mortality' titulo='Decesos' cifra={des} subcifra={desdiff} />\n                </Col>\n            </Row>\n        ) \n    }\n    return (\n        <div>\n            {\n                handleData(dataset)\n            }\n        </div>\n    );\n};\n\nexport default StateDataContainer;\n","import React from 'react';\nimport { \n            LineChart, \n            Line, \n            XAxis, \n            YAxis, \n            CartesianGrid, Tooltip, Legend, Brush, ReferenceLine \n        } from 'recharts';\nimport dbnacional from '../database/dbnacional'; \n\nconst GeneralGraph = () =>{\n    //graficas de rechart\n    return (\n        <div className=\"graphContainer\">\n            <LineChart\n                width={500}\n                height={300}\n                data={dbnacional}\n            >\n\n                <Brush dataKey=\"name\" height={30} stroke=\"#bee5eb\" />   \n                <CartesianGrid strokeDasharray=\"5 5\" />\n                <XAxis dataKey=\"fechaformat\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"confirmados\" stroke=\"#cc0000\" />\n                <Line type=\"monotone\" dataKey=\"sospechosos\" stroke=\"#4C994C\" />\n                <Line type=\"monotone\" dataKey=\"decesos\" stroke=\"#333\" />\n                <ReferenceLine x=\"17-Marzo\" stroke=\"#e19254\" label=\"suspención de clases\" strokeDasharray=\"3 3\" />\n                <ReferenceLine x=\"30-Marzo\" stroke=\"#e19254\" label=\"emergencia sanitaria\" strokeDasharray=\"3 3\" />\n                <ReferenceLine x=\"24-Marzo\" stroke=\"#e19254\" label=\"fase 2\" strokeDasharray=\"3 3\" />\n            </LineChart>\n        </div>\n    );\n};\n\nexport default GeneralGraph;\n","import React from 'react'; \nimport dataset from '../database/dbnacional'; \nimport {\n    BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n  } from 'recharts';\n\nconst MinimalGraph = () =>{\n\n    let diffDays = () => {\n        let value = dataset.length - 1\n        let act, ant; \n        let diffList = []; \n        \n        while(value > 0){\n            act = dataset[value].confirmados;\n            ant = dataset[value - 1].confirmados;\n            diffList.push({\n                dia: dataset[value].fechaformat,\n                suma: act-ant\n            }); \n            value -= 1\n        }\n        return(\n            diffList.reverse()\n        );\n    }\n    return(\n        <div className='newcases-graph'>\n                <h4>Casos nuevos por día</h4>\n                <BarChart\n                    width={700}\n                    height={200}\n                    data={diffDays()}\n                    margin={{\n                    top: 5, right: 30, left: 20, bottom: 5,\n                    }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"dia\" />\n                    <YAxis dataKey=\"suma\" />\n                    <Tooltip />\n                    <Legend />\n                    <Bar type=\"monotone\" dataKey=\"suma\" fill=\"#0087cc\" label={{ position: 'top' }} />\n                </BarChart>\n        </div>\n    ); \n}\n\nexport default MinimalGraph;","import React, { Component } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap';\nimport StateMapContainer from './StateMapContainer';\nimport StateListContainer from './StateListContainer'; \nimport StateDataContainer from './StateDataContainer';\nimport GeneralGraph from './GeneralGraph';\nimport MinimalGraph from './MinimalGraph';\n\nexport default class CentralContainer extends Component {\n    render() {\n        return (\n            <>\n                <Container className=\"contenedor-principal\">\n                    <Row className=\"justify-content-md-center\">\n                        <StateDataContainer />\n                    </Row>\n                    <Row>\n                        <GeneralGraph />\n                    </Row>\n                    <Row>\n                        <Col xs={12} md={8}>\n                            <StateMapContainer mapa='mx' titulo='México' />\n                        </Col>\n                        <Col xs={6} md={4}>\n                            <StateListContainer />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <MinimalGraph />\n                    </Row>\n                </Container>\n            </>\n        )\n    }\n}\n","import React from 'react';\nimport { FaHeart } from \"react-icons/fa\";\nimport { Container, Row } from 'react-bootstrap'; \n\nconst Footer = () =>{\n    return (\n        <>\n            <Container>\n                <Row className=\"justify-content-md-center\">\n                    <div className='links-adicionales'>\n                        <h4>Links adicionales</h4>\n                        <p>\n                            <li><a href='https://coronavirus.gob.mx/'>Sitio oficial Secretaria de Salud [MX]</a></li>\n                            <li><a href='https://mexico.frenalacurva.net/'>Iniciativa Frena la Curva [MX]</a></li>\n                            <li><a href='http://covidatos.mx/'>Tablero de datos COVIDATOSMX</a></li>\n                        </p>\n                    </div>\n                </Row>\n                <Row className=\"justify-content-md-center\">\n                    <div className='footer-container'>\n                        <p className='footer-text'>Hecho con <FaHeart /> por <a href='https://twitter.com/JebusDoodles'>Jesús Cortés</a>. Quédense en casa.</p>\n                    </div>\n                </Row>\n            </Container>\n        </>\n    );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\nimport { FaRegClock } from 'react-icons/fa';\nimport dataset from '../database/dbnacional'; \n\nconst LastUpdate = () =>{\n    let date_update = dataset[dataset.length - 1].fechaformat;\n    return (\n        <Alert variant='info' className='alerta-estilos'>\n            <FaRegClock /> Última actualización de información del <b> {date_update} </b>\n        </Alert>\n    );\n}\n\nexport default LastUpdate;","import React from 'react'; \nimport Helmet from 'react-helmet'; \nimport ogImg from '../../assets/image/image.png'\n\nconst SEO = (props) => (\n    <>\n        <Helmet>\n            <title>({props.confirmados}) MX COVID 19</title>\n            <meta name=\"description\" content=\"Tabla de seguimiento de los casos de COVID-19 (Coronavirus) en México\" />\n            <link rel=\"canonical\" href=\"https://mx-covid19.github.io\" />\n                { /* Tags de OpenGraph */ }\n                <meta property=\"og:url\" content=\"https://mx-covid19.github.io\" />\n                <meta property=\"og:title\" content=\"MX Covid-19 - Tabla seguimiento\" />\n                <meta property=\"og:description\" content=\"Tabla de seguimiento de los casos de COVID-19 (Coronavirus) en México\" />\n                <meta property=\"og:image\" content={ogImg} />\n                { /* Tags de Twitter Card */ }\n                <meta name=\"twitter:card\" content=\"summary_large_image\" />\n                <meta name=\"twitter:title\" content=\"MX Covid-19 - Tabla seguimiento\" />\n                <meta name=\"twitter:description\" content=\"Tabla de seguimiento de los casos de COVID-19 (Coronavirus) en México\" />\n                <meta name=\"twitter:image\" content={ogImg} />\n        </Helmet>\n    </>\n)\n\nexport default SEO; ","import React, { Component } from 'react'\nimport AppHeader from './../components/AppHeader';\nimport CentralContainer from './../components/CentralContainer';\nimport Footer from './../components/Footer';\nimport LastUpdate from './../components/LastUpdate'; \nimport SEO from './../components/SEO/SEO'; \nimport data from '../database/dbnacional'; \n\nexport default class HomeContainer extends Component {\n    render() {\n        let conf = data[data.length - 1].confirmados;\n        return (\n            <div>\n                <SEO confirmados={`${conf}`} />\n                <LastUpdate />\n                <AppHeader></AppHeader>\n                <CentralContainer />\n                <Footer />\n            </div>\n        )\n    }\n}\n","import React from 'react';\n//react router\nimport { BrowserRouter as Router, Route } from 'react-router-dom'; \nimport HomeContainer from './containers/HomeContainer'; \nimport './App.sass';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Route exact path={process.env.PUBLIC_URL + '/'} component={HomeContainer}></Route>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// estilos de react bootstrap \nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App></App>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}