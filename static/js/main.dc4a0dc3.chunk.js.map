{"version":3,"sources":["assets/image/image.png","assets/maps/mexican.topojson","components/AppHeader.js","components/MapSelector.js","components/StateMapContainer.js","components/StateListContainer.js","components/CardSelector.js","components/StateDataContainer.js","components/GeneralGraph.js","components/MinimalGraph.js","components/DailySumTable.js","components/MortalityGraph.js","components/CentralContainer.js","components/Footer.js","components/LastUpdate.js","components/SEO/SEO.js","containers/HomeContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppHeader","Navbar","bg","variant","Brand","href","MapSelector","datosDiarios","dataset","slice","length","colorScale","scaleQuantile","domain","map","d","confirmados","range","project","geoConicConformal","rotate","center","parallels","scale","translate","width","height","projection","geography","mapData","geographies","geo","props","cur","find","s","iso","properties","gmi_admin","OverlayTrigger","placement","key","rsmKey","overlay","Tooltip","id","nombre","className","fill","stroke","Component","StateMapContainer","mapa","titulo","StateListContainer","Table","striped","datosPasados","datosPoblacion","dbpoblacion","datosListado","i","push","diferencia","decesos","diferenciaDecesos","rateDeath","rateConfirmed","poblacion","datosLista","sort","a","filter","c","x","pos","toString","decimalLength","indexOf","numStr","substr","Number","residuoDeathRate","Math","floor","handleList","CardSelector","tipo","cifra","subcifra","data","color","Card","Body","Title","Text","end","delay","type","dataKey","fillOpacity","StateDataContainer","conf","confdiff","sus","sospechosos","sosdiff","des","desdiff","info","name","act","ant","value","diffList","dia","fechaformat","reverse","Row","Col","handleData","total","ultimo","panelPerDay","GeneralGraph","dbnacional","strokeDasharray","label","MinimalGraph","suma","diffDays","margin","top","right","left","bottom","position","angle","DailySumTable","svg","d3","append","attr","padding","call","y","myColor","selectAll","group","variable","enter","bandwidth","style","renderHeatmap","otherData","alldata","datosTabla","dataListado","console","log","makeTable","MortalityGraph","mortDays","CentralContainer","Container","Alert","Link","xs","md","Footer","LastUpdate","date_update","SEO","content","rel","property","ogImg","HomeContainer","App","exact","path","process","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"g2wDAAAA,EAAOC,QAAU,IAA0B,mC,ksqsCCA3CD,EAAOC,QAAU,IAA0B,0C,yoECa5BC,EAVG,WACd,OACI,6BACI,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,SACtB,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,KAAnB,kB,0GC8DDC,E,uKA3DP,IAEIC,EAAeC,EAAQC,MAAMD,EAAQE,OAAS,GAAIF,EAAQE,QAExDC,EAAaC,0BACdC,OAAON,EAAaO,KAAI,SAAAC,GAAC,OAAIA,EAAEC,gBAC/BC,MAAM,CACH,UACA,UACA,UACA,UACA,YAGJC,EAAUC,cACTC,OAAO,CAAC,IAAK,IACbC,OAAO,CAAC,EAAG,KACXC,UAAU,CAAC,KAAM,OACjBC,MAAM,MACNC,UAAU,CAACC,IAAWC,MAU3B,OACI,oCACI,kBAAC,gBAAD,CAAeC,WAAYT,EAASQ,OAAQ,IAAKD,MAAO,KAChD,kBAAC,cAAD,CAAaG,UAAWC,MACnB,qBAAEC,YACahB,KAAI,SAAAiB,GACZ,IAdLC,EAcWC,EAAM1B,EAAa2B,MAAK,SAAAC,GAAC,OAAIA,EAAEC,MAAQL,EAAIM,WAAWC,aAC5D,OACI,kBAACC,EAAA,EAAD,CACIC,UAAU,QACVC,IAAKV,EAAIW,OACTC,SAnBbX,EAmBoCC,EAjBnD,kBAACW,EAAA,EAAD,CAASC,GAAG,kBACPb,EAAMc,OADX,IACmB,6BADnB,IACyB,0BAAMC,UAAU,gBAAhB,IAAiCf,EAAMhB,YAAvC,QAkBG,kBAAC,YAAD,CACIyB,IAAKV,EAAIW,OACTd,UAAWG,EACXiB,KAAMf,EAAMtB,EAAWsB,EAAIjB,aAAe,UAC1CiC,OAAO,yB,GAhD7BC,aCYXC,EAhBW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC/B,OACI,oCACI,yBAAKN,UAAU,mBAAmBM,GAClC,yBAAKN,UAAU,iBACX,kBAAC,EAAD,CAAaK,KAAMA,O,kBCkEpBE,EAtEY,WAgDvB,OACI,yBAAKP,UAAU,oBACX,kBAACQ,EAAA,EAAD,CAAOC,SAAO,GACV,+BACI,4BACI,wBAAIT,UAAU,gBAAd,UACA,wBAAIA,UAAU,gBAAd,eACA,wBAAIA,UAAU,gBAAd,eACA,wBAAIA,UAAU,gBAAd,qBACA,wBAAIA,UAAU,gBAAd,gCAGR,+BA3DO,WACf,IAAIxC,EAAeC,EAAQC,MAAMD,EAAQE,OAAS,GAAIF,EAAQE,QAC1D+C,EAAejD,EAAQC,MAAMD,EAAQE,OAAS,GAAIF,EAAQE,OAAS,IACnEgD,EAAiBC,EAsBrBpD,GAHAA,EAhBiB,WAEb,IADA,IAAIqD,EAAe,GACVC,EAAI,EAAGA,EAAItD,EAAaG,OAAQmD,IACrCD,EAAaE,KAAK,CACdhB,OAAQvC,EAAasD,GAAGf,OACxB9B,YAAaT,EAAasD,GAAG7C,YAC7B+C,WAAYxD,EAAasD,GAAG7C,YAAcyC,EAAaI,GAAG7C,YAC1DgD,QAASzD,EAAasD,GAAGG,QACzBC,kBAAmB1D,EAAasD,GAAGG,QAAUP,EAAaI,GAAGG,QAC7DE,UAAqC,IAA1B3D,EAAasD,GAAGG,QAAgBP,EAAaI,GAAG7C,YAC3DmD,cAAiB5D,EAAasD,GAAG7C,YAAc0C,EAAeG,GAAGO,UAAc,MAGvF,OAAOR,EAGIS,IAGaC,MAAK,kBAAcC,EAAd,EAAEvD,YAAF,SAAmBA,YAAqBuD,KAUzE,OACIhE,EAAaiE,QAAO,SAAAC,GAAC,OAAIA,EAAEzD,YAAc,KAAGF,KAAK,SAAA2D,GAAC,OAC9C,wBAAIhC,IAAKgC,EAAErC,KACP,4BAAKqC,EAAE3B,QACP,wBAAIC,UAAU,cAAc0B,EAAEzD,YAAY,6BAAUyD,EAAEV,WAAa,EAAI,0BAAMhB,UAAU,cAAhB,KAAgC0B,EAAEV,WAAlC,KAAwD,KAC/H,wBAAIhB,UAAU,cAAc0B,EAAET,QAAQ,6BAAUS,EAAER,kBAAoB,EAAI,0BAAMlB,UAAU,cAAhB,KAAgC0B,EAAER,kBAAlC,KAA+D,KACzI,4BAdU,SAACS,GAAc,IAAXC,EAAU,uDAAL,EACvBxC,EAAIuC,EAAEE,WAENC,EAAgB1C,EAAE2C,QAAQ,KAAO,EACjCC,EAAS5C,EAAE6C,OAAO,EAAGH,EAAgBF,GACzC,OAAOM,OAAOF,GASDG,CAAiBT,EAAEP,WAAxB,MACA,4BAAKiB,KAAKC,MAAMX,EAAEN,oBAmBdkB,O,mCCjCTC,EA5BM,SAAC,GAAkD,IAAjDC,EAAgD,EAAhDA,KAAMlC,EAA0C,EAA1CA,OAAQmC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACxD,OACI,oCACI,kBAACC,EAAA,EAAD,CAAM7C,UAAWwC,GACb,kBAACK,EAAA,EAAKC,KAAN,KACI,kBAACD,EAAA,EAAKE,MAAN,CAAY/C,UAAU,eAAeM,GACrC,kBAACuC,EAAA,EAAKG,KAAN,CAAWhD,UAAU,eACjB,kBAAC,IAAD,CAASiD,IAAKR,IACd,0BAAMzC,UAAU,kBAAhB,MAAoC,kBAAC,IAAD,CAASkD,MAAO,IAAKD,IAAKP,IAA9D,OAGJ,kBAAC,IAAD,CAAWhE,MAAO,IAAKC,OAAQ,IAAKgE,KAAMA,GACtC,kBAAC,IAAD,CAAMQ,KAAK,WAAWC,QAAQ,QAAQlD,OAAQ0C,EAAOS,YAAa,GAAIpD,KAAM2C,KAEhF,kBAACC,EAAA,EAAKG,KAAN,CAAWhD,UAAU,eAAeM,EAApC,gB,QCiFLgD,EAhGY,WAoFvB,OACI,6BApFe,SAAAX,GAEf,IAAIY,EAAOZ,EAAKA,EAAKhF,OAAS,GAAGM,YAC7BuF,EAAWb,EAAKA,EAAKhF,OAAS,GAAGM,YAAc0E,EAAKA,EAAKhF,OAAS,GAAGM,YACrEwF,EAAMd,EAAKA,EAAKhF,OAAS,GAAG+F,YAC5BC,EAAUhB,EAAKA,EAAKhF,OAAS,GAAG+F,YAAcf,EAAKA,EAAKhF,OAAS,GAAG+F,YACpEE,EAAMjB,EAAKA,EAAKhF,OAAS,GAAGsD,QAC5B4C,EAAUlB,EAAKA,EAAKhF,OAAS,GAAGsD,QAAU0B,EAAKA,EAAKhF,OAAS,GAAGsD,QAE9D6C,EAAO,SAACC,GACV,IACIC,EAAKC,EADLC,EAAQzG,EAAQE,OAAS,EAEzBwG,EAAW,GAEf,GAAY,gBAATJ,EACC,KAAMG,EAAQ,GACVF,EAAMvG,EAAQyG,GAAOjG,YACrBgG,EAAMxG,EAAQyG,EAAQ,GAAGjG,YACzBkG,EAASpD,KAAK,CACVqD,IAAK3G,EAAQyG,GAAOG,YACpB5B,MAAOuB,EAAIC,IAEfC,GAAS,EAEhB,GAAY,gBAATH,EACA,KAAMG,EAAQ,GACVF,EAAMvG,EAAQyG,GAAOR,YACrBO,EAAMxG,EAAQyG,EAAQ,GAAGR,YACzBS,EAASpD,KAAK,CACVqD,IAAK3G,EAAQyG,GAAOG,YACpB5B,MAAOuB,EAAIC,IAEfC,GAAS,OAGb,KAAMA,EAAQ,GACVF,EAAMvG,EAAQyG,GAAOjD,QACrBgD,EAAMxG,EAAQyG,EAAQ,GAAGjD,QACzBkD,EAASpD,KAAK,CACVqD,IAAK3G,EAAQyG,GAAOG,YACpB5B,MAAOuB,EAAIC,IAEfC,GAAS,EAIjB,OACIC,EAASG,WAIjB,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,EAAD,CAAchC,KAAK,UAAUlC,OAAO,cAAcmC,MAAOc,EAAMb,SAAUc,EAAUb,KAAMmB,EAAK,eAAgBlB,MAAO,aAEzH,kBAAC4B,EAAA,EAAD,KACI,kBAAC,EAAD,CAAchC,KAAK,UAAUlC,OAAO,cAAcmC,MAAOgB,EAAKf,SAAUiB,EAAShB,KAAMmB,EAAK,eAAgBlB,MAAO,aAEvH,kBAAC4B,EAAA,EAAD,KACI,kBAAC,EAAD,CAAchC,KAAK,YAAYlC,OAAO,cAAcmC,MAAOmB,EAAKlB,SAAUmB,EAASlB,KAAMmB,EAAK,WAAYlB,MAAO,WA0BrH6B,CAAWhH,GArBH,SAAAkF,GAChB,IAAI+B,EAAQ/B,EAAKhF,OACbgH,EAAShC,EAAKhF,OAAS,EAC3B,OACI,kBAAC4G,EAAA,EAAD,CAAKvE,UAAU,aAEP2C,EAAKjF,MAAMiH,EAASD,GAAO3G,KAAI,SAAA2D,GAAC,OAC5B,kBAAC8C,EAAA,EAAD,CAAK9E,IAAKgC,EAAEhC,KACR,uBAAGM,UAAU,mBAAmB0B,EAAEzD,aAClC,uBAAG+B,UAAU,mBAAmB0B,EAAEgC,aAClC,uBAAG1D,UAAU,mBAAmB0B,EAAET,SAClC,uBAAGjB,UAAU,aAAa0B,EAAE2C,kBAaxCO,CAAYnH,KCvDboH,EA9BM,WAEjB,OACI,yBAAK7E,UAAU,kBACX,kBAAC,IAAD,CACItB,MAAO,IACPC,OAAQ,IACRgE,KAAMmC,GAGN,kBAAC,IAAD,CAAO1B,QAAQ,OAAOzE,OAAQ,GAAIuB,OAAO,YACzC,kBAAC,IAAD,CAAe6E,gBAAgB,QAC/B,kBAAC,IAAD,CAAO3B,QAAQ,gBACf,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAMD,KAAK,WAAWC,QAAQ,cAAclD,OAAO,YACnD,kBAAC,IAAD,CAAMiD,KAAK,WAAWC,QAAQ,cAAclD,OAAO,YACnD,kBAAC,IAAD,CAAMiD,KAAK,WAAWC,QAAQ,UAAUlD,OAAO,SAC/C,kBAAC,IAAD,CAAeyB,EAAE,WAAWzB,OAAO,UAAU8E,MAAM,0BAAuBD,gBAAgB,QAC1F,kBAAC,IAAD,CAAepD,EAAE,WAAWzB,OAAO,UAAU8E,MAAM,uBAAuBD,gBAAgB,QAC1F,kBAAC,IAAD,CAAepD,EAAE,WAAWzB,OAAO,UAAU8E,MAAM,SAASD,gBAAgB,QAC5E,kBAAC,IAAD,CAAepD,EAAE,WAAWzB,OAAO,UAAU8E,MAAM,SAASD,gBAAgB,QAC5E,kBAAC,IAAD,CAAepD,EAAE,UAAUzB,OAAO,UAAU8E,MAAM,mBAAmBD,gBAAgB,QACrF,kBAAC,IAAD,CAAepD,EAAE,eAAezB,OAAO,UAAU8E,MAAM,iBAAiBD,gBAAgB,WCczFE,EA1CM,WAoBjB,OACI,yBAAKjF,UAAU,kBACP,4DACA,kBAAC,IAAD,CACItB,MAAO,IACPC,OAAQ,IACRgE,KAxBD,WAKX,IAJA,IACIqB,EAAKC,EADLC,EAAQzG,EAAQE,OAAS,EAEzBwG,EAAW,GAETD,EAAQ,GACVF,EAAMvG,EAAQyG,GAAOjG,YACrBgG,EAAMxG,EAAQyG,EAAQ,GAAGjG,YACzBkG,EAASpD,KAAK,CACVqD,IAAK3G,EAAQyG,GAAOG,YACpBa,KAAMlB,EAAIC,IAEdC,GAAS,EAEb,OACIC,EAASG,UASKa,GACNC,OAAQ,CACRC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAGrC,kBAAC,IAAD,CAAeT,gBAAgB,QAC/B,kBAAC,IAAD,CAAO3B,QAAQ,QACf,kBAAC,IAAD,CAAOA,QAAQ,SACf,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKD,KAAK,WAAWC,QAAQ,OAAOnD,KAAK,UAAU+E,MAAO,CAAES,SAAU,SAAUC,MAAO,S,QCoE5FC,E,uKAbP,OACI,oCAvDJ,WACI,IAAIP,EAAe,GAAfA,EAA0B,GAA1BA,EAAsC,GAAtCA,EAAgD,GAChD1G,EAAQ,IAAM0G,EAAcA,EAC5BzG,EAAS,IAAMyG,EAAaA,EAE5BQ,EAAMC,IAAU,eACfC,OAAO,OACPC,KAAK,QAASrH,EAAQ0G,EAAcA,GACpCW,KAAK,SAAUpH,EAASyG,EAAaA,GACrCU,OAAO,KACPC,KAAK,YAAa,aAAeX,EAAc,IAAMA,EAAa,KAK/DzD,EAAIkE,MACC3H,MAAM,CAAE,EAAGQ,IACXZ,OALM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAMpDkI,QAAQ,KAEjBJ,EAAIE,OAAO,KACNC,KAAK,YAAa,eAAiBpH,EAAS,KAC5CsH,KAAKJ,IAAclE,IAExB,IAAIuE,EAAIL,MACH3H,MAAM,CAAES,EAAQ,IAChBb,OAbQ,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,QAc/DkI,QAAQ,KACbJ,EAAIE,OAAO,KAAKG,KAAKJ,IAAYK,IAEjC,IAAIC,EAAUN,MAAiB3H,MAAM,CAAC,QAAS,YAAYJ,OAAO,CAAC,EAAE,MAgBzE,OAdI+H,IAAO,0FAA0F,SAASlD,GAEzGiD,EAAIQ,YACCzD,KAAKA,GAAM,SAAS3E,GAAI,OAAOA,EAAEqI,MAAM,IAAIrI,EAAEsI,YAC7CC,QACAT,OAAO,QACPC,KAAK,KAAK,SAAS/H,GAAK,OAAO2D,EAAE3D,EAAEqI,UACnCN,KAAK,KAAK,SAAS/H,GAAK,OAAOkI,EAAElI,EAAEsI,aACnCP,KAAK,QAASpE,EAAE6E,aAChBT,KAAK,SAAUG,EAAEM,aACjBC,MAAM,QAAQ,SAASzI,GAAK,OAAOmI,EAAQnI,EAAEkG,aAKnD,oCACI,yBAAKpE,GAAG,gBASR4G,GA9FM,WACd,IAEIC,EAFAnJ,EAAeoJ,EAAQlJ,MAAMkJ,EAAQjJ,OAAS,GAAIiJ,EAAQjJ,QAC1D+C,EAAekG,EAAQlJ,MAAMkJ,EAAQjJ,OAAS,GAAIiJ,EAAQjJ,OAAS,IA8BvEgJ,EAzBkB,WAgBd,IAfA,IAAIE,EAAa,GAeT/F,EAAI,EAAGA,EAAItD,EAAaG,OAAQmD,IACpC+F,EAAW9F,KAAK,CACZhB,OAAQvC,EAAasD,GAAGf,OACxBiB,WAAYxD,EAAasD,GAAG7C,YAAcyC,EAAaI,GAAG7C,cAGlE,OAAO4I,EAGCC,GAEZC,QAAQC,IAAIL,GA+DJM,Q,GAnGQ9G,aC4Cb+G,EA1CQ,WAoBnB,OACI,yBAAKlH,UAAU,kBACP,sDACI,kBAAC,IAAD,CACItB,MAAO,IACPC,OAAQ,IACRgE,KAxBL,WAKX,IAJA,IACIqB,EAAKC,EADLC,EAAQzG,EAAQE,OAAS,EAEzBwG,EAAW,GAETD,EAAQ,GACVF,EAAMvG,EAAQyG,GAAOjD,QACrBgD,EAAMxG,EAAQyG,EAAQ,GAAGjD,QACzBkD,EAASpD,KAAK,CACVqD,IAAK3G,EAAQyG,GAAOG,YACpBpD,QAAS+C,EAAIC,IAEjBC,GAAS,EAEb,OACIC,EAASG,UASS6C,GACN/B,OAAQ,CACRC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAGrC,kBAAC,IAAD,CAAeT,gBAAgB,QAC/B,kBAAC,IAAD,CAAO3B,QAAQ,QACf,kBAAC,IAAD,CAAOA,QAAQ,YACf,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAMD,KAAK,WAAWC,QAAQ,UAAUlD,OAAO,UAAUD,KAAK,UAAU+E,MAAO,CAAES,SAAU,gBAAiBC,MAAO,SC/BtH0B,E,uKAEb,OACI,oCACI,kBAACC,EAAA,EAAD,CAAWrH,UAAU,wBACjB,kBAACuE,EAAA,EAAD,CAAKvE,UAAU,6BACX,kBAAC,EAAD,OAEJ,kBAACuE,EAAA,EAAD,KACI,kBAAC,EAAD,OAEJ,kBAACA,EAAA,EAAD,CAAKvE,UAAU,0BACf,kBAACsH,EAAA,EAAD,CAAOlK,QAAQ,WAAf,wCACyC,kBAACkK,EAAA,EAAMC,KAAP,CAAYjK,KAAK,6DAAjB,uBADzC,kDAIA,kBAACiH,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKgD,GAAI,GAAIC,GAAI,GACb,kBAAC,EAAD,CAAmBpH,KAAK,KAAKC,OAAO,eAExC,kBAACkE,EAAA,EAAD,CAAKgD,GAAI,EAAGC,GAAI,GACZ,kBAAC,EAAD,QAGR,kBAAClD,EAAA,EAAD,KACI,kBAAC,EAAD,OAEJ,kBAACA,EAAA,EAAD,KACI,kBAAC,EAAD,OAEJ,kBAACA,EAAA,EAAD,KACI,kBAAC,EAAD,a,GA/BsBpE,a,QCwB/BuH,EA/BA,WACX,OACI,oCACI,kBAACL,EAAA,EAAD,KACI,kBAAC9C,EAAA,EAAD,CAAKvE,UAAU,6BACX,yBAAKA,UAAU,qBACX,qDACA,2BACI,4BAAI,uBAAG1C,KAAK,8EAA6E,kBAAC,IAAD,MAArF,8CACJ,4BAAI,uBAAGA,KAAK,8CAA6C,kBAAC,IAAD,MAArD,4BAER,mDACA,2BACI,4BAAI,uBAAGA,KAAK,+BAAR,2CACJ,4BAAI,uBAAGA,KAAK,qDAAR,kDACJ,4BAAI,uBAAGA,KAAK,oCAAR,mCACJ,4BAAI,uBAAGA,KAAK,kCAAR,6BACJ,4BAAI,uBAAGA,KAAK,wBAAR,oDAIhB,kBAACiH,EAAA,EAAD,CAAKvE,UAAU,6BACX,yBAAKA,UAAU,oBACX,uBAAGA,UAAU,eAAb,aAAqC,kBAAC,IAAD,MAArC,QAAqD,uBAAG1C,KAAK,mCAAR,sBAArD,+BCbTqK,EATI,WACf,IAAIC,EAAcnK,EAAQA,EAAQE,OAAS,GAAG0G,YAC9C,OACI,kBAACiD,EAAA,EAAD,CAAOlK,QAAQ,OAAO4C,UAAU,kBAC5B,kBAAC,IAAD,MADJ,qDAC2D,+BAAK4H,EAAL,O,oCCepDC,EApBH,SAAC5I,GAAD,OACR,oCACI,kBAAC,IAAD,KACI,mCAASA,EAAMhB,YAAf,iBACA,0BAAM8F,KAAK,cAAc+D,QAAQ,6EACjC,0BAAMC,IAAI,YAAYzK,KAAK,iCAEvB,0BAAM0K,SAAS,SAASF,QAAQ,iCAChC,0BAAME,SAAS,WAAWF,QAAQ,oCAClC,0BAAME,SAAS,iBAAiBF,QAAQ,6EACxC,0BAAME,SAAS,WAAWF,QAASG,MAEnC,0BAAMlE,KAAK,eAAe+D,QAAQ,wBAClC,0BAAM/D,KAAK,gBAAgB+D,QAAQ,oCACnC,0BAAM/D,KAAK,sBAAsB+D,QAAQ,6EACzC,0BAAM/D,KAAK,gBAAgB+D,QAASG,SCX/BC,E,uKAEb,IAAI3E,EAAOZ,EAAKA,EAAKhF,OAAS,GAAGM,YACjC,OACI,6BACI,kBAAC,EAAD,CAAKA,YAAW,UAAKsF,KACrB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAT2BpD,a,OCQ5BgI,OAVf,WACE,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAMC,eAA8BC,UAAWL,OCEhDM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCTNC,IAASC,OAAO,kBAAC,GAAD,MAAaC,SAASC,eAAe,SD0H/C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzC,QAAQyC,MAAMA,EAAMC,c","file":"static/js/main.dc4a0dc3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image.ee9432ce.png\";","module.exports = __webpack_public_path__ + \"static/media/mexican.e5173ac9.topojson\";","import React from 'react';\nimport { Navbar } from 'react-bootstrap';\n\nconst AppHeader = () =>{\n    return (\n        <div>\n            <Navbar bg=\"gray\" variant=\"light\">\n                <Navbar.Brand href=\"/\">MX COVID-19</Navbar.Brand>\n            </Navbar>\n        </div>\n    );\n}\n\nexport default AppHeader;\n","import React, { Component } from 'react';\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\nimport { geoConicConformal } from 'd3-geo';\nimport { scaleQuantile } from 'd3-scale'; \nimport { Tooltip, OverlayTrigger } from 'react-bootstrap'; \nimport mapData from './../assets/maps/mexican.topojson'; \nimport dataset from '../database/dbestados';\n\nclass MapSelector extends Component {\n    render() {\n        let width = 750; \n        let height = 400; \n        let datosDiarios = dataset.slice(dataset.length - 32, dataset.length);\n\n        const colorScale = scaleQuantile()\n            .domain(datosDiarios.map(d => d.confirmados))\n            .range([\n                \"#fef1d2\",\n                \"#fedfa9\",\n                \"#f3c379\",\n                \"#e19254\",\n                \"#c35646\"\n              ]);\n\n        let project = geoConicConformal()\n            .rotate([102, 0])\n            .center([0, 24])\n            .parallels([17.5, 29.5])\n            .scale(1200)\n            .translate([width / 2, height / 2]);\n        \n        function renderTooltip(props) {\n            return (\n                <Tooltip id=\"button-tooltip\">\n                    {props.nombre} <br/> <span className='tooltip-conf'>({props.confirmados})</span>\n                </Tooltip>\n            );\n        }\n\n        return (\n            <>\n                <ComposableMap projection={project} height={450} width={700}>\n                        <Geographies geography={mapData}>\n                            {({geographies}) => \n                                geographies.map(geo => {\n                                    const cur = datosDiarios.find(s => s.iso === geo.properties.gmi_admin);\n                                    return (\n                                        <OverlayTrigger\n                                            placement=\"right\"\n                                            key={geo.rsmKey}\n                                            overlay={renderTooltip(cur)}\n                                        >\n                                            <Geography \n                                                key={geo.rsmKey} \n                                                geography={geo}\n                                                fill={cur ? colorScale(cur.confirmados) : \"#a3a3a3\"}\n                                                stroke=\"#17789b\"\n                                            />\n                                        </OverlayTrigger>\n                                    );\n                                })\n                            }\n                        </Geographies>\n                </ComposableMap>\n            </>\n        );\n    }\n}\n\nexport default MapSelector;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MapSelector from './MapSelector';\n\nconst StateMapContainer = ({ mapa, titulo }) => {\n    return (\n        <>\n            <div className='title-map-state'>{titulo}</div>\n            <div className='svg-map-state'>\n                <MapSelector mapa={mapa} />\n            </div>\n        </>\n    );\n}\n\nStateMapContainer.propTypes = {\n    titulo: PropTypes.string.isRequired,\n    mapa: PropTypes.string.isRequired,\n};\n\nexport default StateMapContainer;","import React from 'react';\nimport { Table } from 'react-bootstrap';\nimport dataset from '../database/dbestados';\nimport dbpoblacion from '../database/dbpoblacion.json';\n\nconst StateListContainer = () =>{\n    const handleList = () =>{\n        let datosDiarios = dataset.slice(dataset.length - 32, dataset.length);\n        let datosPasados = dataset.slice(dataset.length - 64, dataset.length - 32);\n        let datosPoblacion = dbpoblacion;\n\n        // funcion para crear un nuevo arraylist con coparación de datos anteriores\n        let datosLista = () =>{\n            let datosListado = []; \n            for (var i = 0; i < datosDiarios.length; i++){\n                datosListado.push({\n                    nombre: datosDiarios[i].nombre,\n                    confirmados: datosDiarios[i].confirmados,\n                    diferencia: datosDiarios[i].confirmados - datosPasados[i].confirmados,\n                    decesos: datosDiarios[i].decesos,\n                    diferenciaDecesos: datosDiarios[i].decesos - datosPasados[i].decesos,\n                    rateDeath: datosDiarios[i].decesos * 100 / datosPasados[i].confirmados,\n                    rateConfirmed: ( datosDiarios[i].confirmados / datosPoblacion[i].poblacion ) * 100000\n                }); \n            }\n            return(datosListado); \n        }\n\n        datosDiarios = datosLista(); \n\n        //Ordenar lista de mayor a menor\n        datosDiarios = datosDiarios.sort(({confirmados:a}, {confirmados:b}) => b-a);\n\n        let residuoDeathRate =(x, pos =2) =>{\n            var s = x.toString()\n\n            var decimalLength = s.indexOf('.') + 1\n            var numStr = s.substr(0, decimalLength + pos)\n            return Number(numStr)\n        } \n\n        return(\n            datosDiarios.filter(c => c.confirmados > 0).map( c => \n                <tr key={c.iso}>\n                    <td>{c.nombre}</td>\n                    <td className='tabla-conf'>{c.confirmados}<br></br>{c.diferencia > 0 ? <span className='diff-lista'>(+{c.diferencia})</span> : \" \"}</td>\n                    <td className='tabla-conf'>{c.decesos}<br></br>{c.diferenciaDecesos > 0 ? <span className='diff-lista'>(+{c.diferenciaDecesos})</span> : \" \"}</td>\n                    <td>{residuoDeathRate(c.rateDeath)} %</td>\n                    <td>{Math.floor(c.rateConfirmed)}</td>\n                </tr>             \n            )\n        )\n    }\n    return (\n        <div className='TablaConfirmados'>\n            <Table striped>\n                <thead>\n                    <tr>\n                        <th className='tabla-header'>Estado</th>\n                        <th className='tabla-header'>Confirmados</th>\n                        <th className='tabla-header'>Defunciones</th>\n                        <th className='tabla-header'>Tasa de letalidad</th>\n                        <th className='tabla-header'>Confirmados por 100mil hab</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        handleList(dataset)\n                    }\n                </tbody>\n            </Table>\n        </div>\n    )\n}\n\nexport default StateListContainer; \n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from 'react-bootstrap';\nimport CountUp from 'react-countup';\nimport { AreaChart, Area } from 'recharts'; \n \nconst CardSelector = ({tipo, titulo, cifra, subcifra, data, color}) => {\n    return (\n        <>\n            <Card className={tipo}>\n                <Card.Body>\n                    <Card.Title className=\"card-titulo\">{titulo}</Card.Title>\n                    <Card.Text className=\"card-numero\">\n                        <CountUp end={cifra} /> \n                        <span className=\"card-subnumero\">( +<CountUp delay={1.5} end={subcifra} /> )</span>\n                    </Card.Text>\n                    \n                    <AreaChart width={200} height={100} data={data}>\n                        <Area type=\"monotone\" dataKey=\"cifra\" stroke={color} fillOpacity={.2} fill={color} />\n                    </AreaChart>\n                    <Card.Text className=\"card-bottom\">{titulo} diarios</Card.Text>\n                </Card.Body>\n            </Card>\n        </>\n    );\n}\n\nCardSelector.propTypes = {\n    tipo: PropTypes.string.isRequired,\n    titulo: PropTypes.string.isRequired,\n    cifra: PropTypes.number.isRequired,\n    subcifra: PropTypes.number.isRequired\n};\n\nexport default CardSelector;","import React from 'react';\nimport CardSelector from './CardSelector';\nimport { Row, Col } from 'react-bootstrap';\nimport dataset from '../database/dbnacional'; \n\nconst StateDataContainer = () =>{\n    const handleData = data =>{\n\n        let conf = data[data.length - 1].confirmados;\n        let confdiff = data[data.length - 1].confirmados - data[data.length - 2].confirmados;\n        let sus = data[data.length - 1].sospechosos;\n        let sosdiff = data[data.length - 1].sospechosos - data[data.length - 2].sospechosos;\n        let des = data[data.length - 1].decesos;\n        let desdiff = data[data.length - 1].decesos - data[data.length - 2].decesos;\n\n        const info = (name) => {\n            let value = dataset.length - 1; \n            let act, ant;\n            let diffList = [];\n\n            if(name === 'confirmados'){\n                while(value > 0){\n                    act = dataset[value].confirmados;\n                    ant = dataset[value - 1].confirmados;\n                    diffList.push({\n                        dia: dataset[value].fechaformat,\n                        cifra: act-ant\n                    }); \n                    value -= 1\n                }\n            }if(name === 'sospechosos'){\n                while(value > 0 ){\n                    act = dataset[value].sospechosos;\n                    ant = dataset[value - 1].sospechosos;\n                    diffList.push({\n                        dia: dataset[value].fechaformat,\n                        cifra: act-ant\n                    }); \n                    value -= 1\n                }\n            }else{\n                while(value > 0){\n                    act = dataset[value].decesos;\n                    ant = dataset[value - 1].decesos;\n                    diffList.push({\n                        dia: dataset[value].fechaformat,\n                        cifra: act-ant\n                    }); \n                    value -= 1\n                }\n            } \n\n            return(\n                diffList.reverse()\n            );\n        }\n        \n        return(\n            <Row>\n                <Col>\n                    <CardSelector tipo='confirm' titulo='Confirmados' cifra={conf} subcifra={confdiff} data={info('confirmados')} color={'#f49435'} />\n                </Col>\n                <Col>\n                    <CardSelector tipo='suspect' titulo='Sospechosos' cifra={sus} subcifra={sosdiff} data={info('sospechosos')} color={'#347aac'} />\n                </Col>\n                <Col>\n                    <CardSelector tipo='mortality' titulo='Defunciones' cifra={des} subcifra={desdiff} data={info('decesos')} color={'#000'} />\n                </Col>\n            </Row>\n        ) \n    }\n    const panelPerDay = data =>{\n        let total = data.length; \n        let ultimo = data.length - 7; \n        return(\n            <Row className='panel-div'>\n                {\n                    data.slice(ultimo - total).map(c =>\n                        <Col key={c.key}>\n                            <p className=\"data-panel dp-c\">{c.confirmados}</p>\n                            <p className=\"data-panel dp-s\">{c.sospechosos}</p>\n                            <p className=\"data-panel dp-d\">{c.decesos}</p>\n                            <p className=\"data-date\">{c.fechaformat}</p>\n                        </Col>\n                    )\n                }\n            </Row>\n        )\n    }\n    return (\n        <div>\n            {\n                handleData(dataset)\n            }\n            {\n                panelPerDay(dataset)\n            }\n        </div>\n    );\n};\n\nexport default StateDataContainer;\n","import React from 'react';\nimport { \n            LineChart, \n            Line, \n            XAxis, \n            YAxis, \n            CartesianGrid, Tooltip, Legend, Brush, ReferenceLine \n        } from 'recharts';\nimport dbnacional from '../database/dbnacional'; \n\nconst GeneralGraph = () =>{\n    //graficas de rechart\n    return (\n        <div className=\"graphContainer\">\n            <LineChart\n                width={500}\n                height={300}\n                data={dbnacional}\n            >\n\n                <Brush dataKey=\"name\" height={30} stroke=\"#bee5eb\" />   \n                <CartesianGrid strokeDasharray=\"5 5\" />\n                <XAxis dataKey=\"fechaformat\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"confirmados\" stroke=\"#f49435\" />\n                <Line type=\"monotone\" dataKey=\"sospechosos\" stroke=\"#347aac\" />\n                <Line type=\"monotone\" dataKey=\"decesos\" stroke=\"#333\" />\n                <ReferenceLine x=\"17-Marzo\" stroke=\"#e19254\" label=\"suspención de clases\" strokeDasharray=\"3 3\" />\n                <ReferenceLine x=\"30-Marzo\" stroke=\"#e19254\" label=\"emergencia sanitaria\" strokeDasharray=\"3 3\" />\n                <ReferenceLine x=\"24-Marzo\" stroke=\"#e19254\" label=\"fase 2\" strokeDasharray=\"3 3\" />\n                <ReferenceLine x=\"21-Abril\" stroke=\"#e19254\" label=\"fase 3\" strokeDasharray=\"3 3\" />\n                <ReferenceLine x=\"1-Junio\" stroke=\"#e19254\" label=\"Nueva normalidad\" strokeDasharray=\"3 3\" />\n                <ReferenceLine x=\"24-Diciembre\" stroke=\"#e19254\" label=\"Primera vacuna\" strokeDasharray=\"3 3\" />\n            </LineChart>\n        </div>\n    );\n};\n\nexport default GeneralGraph;\n","import React from 'react'; \nimport dataset from '../database/dbnacional'; \nimport {\n    BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n  } from 'recharts';\n\nconst MinimalGraph = () =>{\n\n    let diffDays = () => {\n        let value = dataset.length - 1\n        let act, ant; \n        let diffList = []; \n        \n        while(value > 0){\n            act = dataset[value].confirmados;\n            ant = dataset[value - 1].confirmados;\n            diffList.push({\n                dia: dataset[value].fechaformat,\n                suma: act-ant\n            }); \n            value -= 1\n        }\n        return(\n            diffList.reverse()\n        );\n    }\n    return(\n        <div className='newcases-graph'>\n                <h4>Casos confirmados por día</h4>\n                <BarChart\n                    width={700}\n                    height={200}\n                    data={diffDays()}\n                    margin={{\n                    top: 5, right: 30, left: 20, bottom: 5,\n                    }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"dia\" />\n                    <YAxis dataKey=\"suma\" />\n                    <Tooltip />\n                    <Legend />\n                    <Bar type=\"monotone\" dataKey=\"suma\" fill=\"#f49435\" label={{ position: 'center', angle: 90 }} />\n                </BarChart>\n        </div>\n    ); \n}\n\nexport default MinimalGraph;","import React, { Component } from 'react';\nimport alldata from '../database/dbestados.json'\nimport * as d3 from \"d3\"; \n\nclass DailySumTable extends Component {\n    render(){\n        const makeTable = () =>{\n            let datosDiarios = alldata.slice(alldata.length - 32, alldata.length);\n            let datosPasados = alldata.slice(alldata.length - 64, alldata.length - 32);\n            let otherData = [];\n            let ultimo = 32; \n            let final =64;\n    \n            let dataListado = () => {\n                let datosTabla = [];  /*\n                for(var j=0; j < 4; j++){\n                    for(var i = 0; i < datosDiarios.length; i++){\n                        datosTabla.push({\n                            nombre: i,\n                            diferencia: datosDiarios[i].confirmados - datosPasados[i].confirmados,\n                        });\n                    }\n                    datosDiarios = datosPasados\n    \n                    ultimo = ultimo + 32 \n                    final = final + 32 \n                    \n                    datosPasados = alldata.slice(alldata.length - final, alldata.length - ultimo)\n                }*/\n                for(var i = 0; i < datosDiarios.length; i++){\n                    datosTabla.push({\n                        nombre: datosDiarios[i].nombre,\n                        diferencia: datosDiarios[i].confirmados - datosPasados[i].confirmados,\n                    });\n                }\n                return(datosTabla);\n            }\n    \n            otherData = dataListado();\n    \n            console.log(otherData)\n        }\n        \n        function renderHeatmap(){\n            var margin = {top: 30, right: 30, bottom: 30, left: 30}, \n                width = 450 - margin.left - margin.right,\n                height = 450 - margin.top - margin.bottom; \n        \n            var svg = d3.select(\"#my_dataviz\")\n                .append(\"svg\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n            \n                var myGroups = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"]\n                var myVars = [\"v1\", \"v2\", \"v3\", \"v4\", \"v5\", \"v6\", \"v7\", \"v8\", \"v9\", \"v10\"]\n            \n                var x = d3.scaleBand()\n                        .range([ 0, width ])\n                        .domain(myGroups)\n                        .padding(0.01);\n\n                svg.append(\"g\")\n                    .attr(\"transform\", \"translate(0,\" + height + \")\")\n                    .call(d3.axisBottom(x))\n                \n                var y = d3.scaleBand()\n                    .range([ height, 0 ])\n                    .domain(myVars)\n                    .padding(0.01);\n                svg.append(\"g\").call(d3.axisLeft(y));\n            \n                var myColor = d3.scaleLinear().range([\"white\", \"#69b3a2\"]).domain([1,100])\n            \n                d3.csv(\"https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/heatmap_data.csv\", function(data) {\n\n                 svg.selectAll()\n                     .data(data, function(d) {return d.group+':'+d.variable;})\n                     .enter()\n                     .append(\"rect\")\n                     .attr(\"x\", function(d) { return x(d.group) })\n                     .attr(\"y\", function(d) { return y(d.variable) })\n                     .attr(\"width\", x.bandwidth() )\n                     .attr(\"height\", y.bandwidth() )\n                     .style(\"fill\", function(d) { return myColor(d.value)} )\n  \n                })\n\n            return(\n                <>\n                    <div id=\"my_dataviz\">\n                    </div>\n                </>\n            );\n        }\n    \n        return(\n            <>\n                {\n                    renderHeatmap()\n                }\n                {\n                    makeTable(alldata) \n                }\n            </>\n        );\n    }\n}\n\nexport default DailySumTable; ","import React from 'react'; \nimport dataset from '../database/dbnacional'; \nimport {\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n  } from 'recharts';\n\nconst MortalityGraph = () =>{\n\n    let mortDays = () => {\n        let value = dataset.length - 1\n        let act, ant; \n        let diffList = []; \n        \n        while(value > 0){\n            act = dataset[value].decesos;\n            ant = dataset[value - 1].decesos;\n            diffList.push({\n                dia: dataset[value].fechaformat,\n                decesos: act-ant\n            }); \n            value -= 1\n        }\n        return(\n            diffList.reverse()\n        );\n    }\n    return(\n        <div className='newcases-graph'>\n                <h4>Defunciones por día</h4>\n                    <LineChart\n                        width={700}\n                        height={200}\n                        data={mortDays()}\n                        margin={{\n                        top: 5, right: 30, left: 20, bottom: 5,\n                        }}\n                    >\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"dia\" />\n                        <YAxis dataKey=\"decesos\" />\n                        <Tooltip />\n                        <Legend />\n                        <Line type=\"monotone\" dataKey=\"decesos\" stroke=\"#cccccc\" fill=\"#000000\" label={{ position: 'insideTopLeft', angle: 90 }} />\n                    </LineChart>\n        </div>\n    ); \n}\n\nexport default MortalityGraph;","import React, { Component } from 'react'\nimport { Container, Row, Col, Alert } from 'react-bootstrap';\nimport StateMapContainer from './StateMapContainer';\nimport StateListContainer from './StateListContainer'; \nimport StateDataContainer from './StateDataContainer';\nimport GeneralGraph from './GeneralGraph';\nimport MinimalGraph from './MinimalGraph';\nimport DailySumTable from './DailySumTable';\nimport MortalityGraph from './MortalityGraph';\n//import HeatMap from './HeatMap';\n\nexport default class CentralContainer extends Component {\n    render() {\n        return (\n            <>\n                <Container className=\"contenedor-principal\">\n                    <Row className=\"justify-content-md-center\">\n                        <StateDataContainer />\n                    </Row>\n                    <Row>\n                        <GeneralGraph />\n                    </Row>\n                    <Row className=\"justify-content-center\">\n                    <Alert variant='warning'>\n                        Debido a un reajuste por parte de la <Alert.Link href=\"https://www.gob.mx/salud/documentos/datos-abiertos-152127\">Secretaria de Salud</Alert.Link> el día 5-10-2020 los datos pueden variar.\n                    </Alert>\n                    </Row>\n                    <Row>\n                        <Col xs={10} md={7}>\n                            <StateMapContainer mapa='mx' titulo='México' />\n                        </Col>\n                        <Col xs={8} md={5}>\n                            <StateListContainer />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <DailySumTable />\n                    </Row>\n                    <Row>\n                        <MinimalGraph />\n                    </Row>\n                    <Row>\n                        <MortalityGraph />\n                    </Row>\n                </Container>\n            </>\n        )\n    }\n}\n","import React from 'react';\nimport { FaHeart, FaGithubAlt, FaRegNewspaper } from \"react-icons/fa\";\nimport { Container, Row } from 'react-bootstrap'; \n\nconst Footer = () =>{\n    return (\n        <>\n            <Container>\n                <Row className=\"justify-content-md-center\">\n                    <div className='links-adicionales'>\n                        <h4>Más información</h4>\n                        <p>\n                            <li><a href='https://jebusdoodles.wordpress.com/2020/04/13/panel-seguimiento-mxcovid19/'><FaRegNewspaper /> ¿Como lo hice? y preguntas frecuentes</a></li>\n                            <li><a href='https://github.com/jebusdoodles/mx-covid19'><FaGithubAlt /> Repositorio de GitHub</a></li>\n                        </p>\n                        <h4>Sitios adicionaless</h4>\n                        <p>\n                            <li><a href='https://coronavirus.gob.mx/'>Sitio oficial Secretaria de Salud [MX]</a></li>\n                            <li><a href='https://viral.datacivica.org/la-respuesta-estados'>Los estados peor preparados - Data Civika[MX]</a></li>\n                            <li><a href='https://mexico.frenalacurva.net/'>Iniciativa Frena la Curva [MX]</a></li>\n                            <li><a href='https://directoriocovidmx.org/'>Directorio COVID Mx [MX]</a></li>\n                            <li><a href='http://covidatos.mx/'>Tablero de datos COVIDATOSMX (Descontuinado)</a></li>\n                        </p>\n                    </div>\n                </Row>\n                <Row className=\"justify-content-md-center\">\n                    <div className='footer-container'>\n                        <p className='footer-text'>Hecho con <FaHeart /> por <a href='https://jebusdoodles.github.io/'>Jesús Cortés</a>. Quédense en casa.</p>\n                    </div>\n                </Row>\n            </Container>\n        </>\n    );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\nimport { FaRegClock } from 'react-icons/fa';\nimport dataset from '../database/dbnacional'; \n\nconst LastUpdate = () =>{\n    let date_update = dataset[dataset.length - 1].fechaformat;\n    return (\n        <Alert variant='info' className='alerta-estilos'>\n            <FaRegClock /> Última actualización de información del <b> {date_update} </b>\n        </Alert>\n    );\n}\n\nexport default LastUpdate;","import React from 'react'; \nimport Helmet from 'react-helmet'; \nimport ogImg from '../../assets/image/image.png'\n\nconst SEO = (props) => (\n    <>\n        <Helmet>\n            <title>({props.confirmados}) MX COVID 19</title>\n            <meta name=\"description\" content=\"Tabla de seguimiento de los casos de COVID-19 (Coronavirus) en México\" />\n            <link rel=\"canonical\" href=\"https://mx-covid19.github.io\" />\n                { /* Tags de OpenGraph */ }\n                <meta property=\"og:url\" content=\"https://mx-covid19.github.io\" />\n                <meta property=\"og:title\" content=\"MX Covid-19 - Tabla seguimiento\" />\n                <meta property=\"og:description\" content=\"Tabla de seguimiento de los casos de COVID-19 (Coronavirus) en México\" />\n                <meta property=\"og:image\" content={ogImg} />\n                { /* Tags de Twitter Card */ }\n                <meta name=\"twitter:card\" content=\"summary_large_image\" />\n                <meta name=\"twitter:title\" content=\"MX Covid-19 - Tabla seguimiento\" />\n                <meta name=\"twitter:description\" content=\"Tabla de seguimiento de los casos de COVID-19 (Coronavirus) en México\" />\n                <meta name=\"twitter:image\" content={ogImg} />\n        </Helmet>\n    </>\n)\n\nexport default SEO; ","import React, { Component } from 'react'\nimport AppHeader from './../components/AppHeader';\nimport CentralContainer from './../components/CentralContainer';\nimport Footer from './../components/Footer';\nimport LastUpdate from './../components/LastUpdate'; \nimport SEO from './../components/SEO/SEO'; \nimport data from '../database/dbnacional'; \n\nexport default class HomeContainer extends Component {\n    render() {\n        let conf = data[data.length - 1].confirmados;\n        return (\n            <div>\n                <SEO confirmados={`${conf}`} />\n                <LastUpdate />\n                <AppHeader></AppHeader>\n                <CentralContainer />\n                <Footer />\n            </div>\n        )\n    }\n}\n","import React from 'react';\n//react router\nimport { BrowserRouter as Router, Route } from 'react-router-dom'; \nimport HomeContainer from './containers/HomeContainer'; \nimport './App.sass';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Route exact path={process.env.PUBLIC_URL + '/'} component={HomeContainer}></Route>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// estilos de react bootstrap \nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App></App>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}